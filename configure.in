AC_PREREQ(2.52)

m4_define(totem_version_major, 2)
m4_define(totem_version_minor, 27)
m4_define(totem_version_micro, 0)

AC_INIT([totem-pl-parser],
        [totem_version_major.totem_version_minor.totem_version_micro],
        [http://bugzilla.gnome.org/enter_bug.cgi?product=totem-pl-parser&component=General])

AC_CONFIG_SRCDIR([plparse/totem-pl-parser.c])
AC_CONFIG_HEADERS([config.h])
AC_GNU_SOURCE

AM_INIT_AUTOMAKE([1.9 dist-bzip2 no-dist-gzip check-news subdir-objects])

dnl Add the languages which your application supports to po/LINGUAS
GETTEXT_PACKAGE=totem-pl-parser
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, ["$GETTEXT_PACKAGE"], [Define to the Gettext package name])
AC_SUBST(GETTEXT_PACKAGE)
AM_GLIB_GNU_GETTEXT
IT_PROG_INTLTOOL([0.35.0])

AC_PROG_CXX
AM_PROG_CC_C_O
AC_PROG_LIBTOOL()
PKG_PROG_PKG_CONFIG

dnl Use local version of asprintf when not on the current system.
AC_CHECK_FUNCS(asprintf)
AC_CONFIG_LIBOBJ_DIR([lib])
AC_REPLACE_FUNCS([asprintf])

AC_PATH_PROG([GLIB_GENMARSHAL],[glib-genmarshal])
AC_PATH_PROG([GLIB_MKENUMS],[glib-mkenums])

# Requirements
GLIB_REQS=2.16.3
GIO_REQS=2.17.3
DBUS_REQS=0.61

# Before making a release, the PLPARSER_LT_VERSION string should be modified.
# The string is of the form C:R:A.
# - If interfaces have been changed or added, but binary compatibility has
#   been preserved, change to C+1:0:A+1
# - If binary compatibility has been broken (eg removed or changed interfaces)
#   change to C+1:0:0
# - If the interface is the same as the previous version, change to C:R+1:A
PLPARSER_LT_VERSION=15:4:3
AC_SUBST(PLPARSER_LT_VERSION)

TOTEM_PL_PARSER_VERSION_MAJOR=totem_version_major
TOTEM_PL_PARSER_VERSION_MINOR=totem_version_minor
TOTEM_PL_PARSER_VERSION_MICRO=totem_version_micro
AC_SUBST(TOTEM_PL_PARSER_VERSION_MAJOR)
AC_SUBST(TOTEM_PL_PARSER_VERSION_MINOR)
AC_SUBST(TOTEM_PL_PARSER_VERSION_MICRO)

pkg_modules="glib-2.0 >= $GLIB_REQS gtk+-2.0 libxml-2.0 gthread-2.0 gio-2.0 >= $GIO_REQS"

##################################
# Checking libcamel dependency
##################################
camel_message=""

AC_ARG_ENABLE(camel-i-know-what-im-doing,
	      AS_HELP_STRING([--disable-camel-i-know-what-im-doing],
			     [Disable libcamel (Unsupported, breaks Podcast support).]),
			     [enable_camel=no],
			     [enable_camel=yes])

if test "x$enable_camel" = "xyes" ; then
   PKG_CHECK_MODULES(LIBCAMEL,  
		     camel-1.2,
                     [have_camel=yes], 
                     [have_camel=no])

   if test "x$have_camel" = "xyes" ; then
      AC_SUBST(LIBCAMEL, camel-1.2)
      AC_SUBST(USELIBCAMEL, yes)
      AC_DEFINE(HAVE_CAMEL, 1, [Camel available in the system])
      pkg_modules="$pkg_modules camel-1.2"
   else
      AC_MSG_ERROR([libcamel is required to compile totem-pl-parser.])
   fi
else
   AC_SUBST(USELIBCAMEL, no)
   camel_message="
 **************************************************************
 Compiling totem-pl-parser without libcamel.
 This will break podcast support and is completely unsupported.
 **************************************************************"
fi

dnl Check for packages for building libtotem-plparser.la
PKG_CHECK_MODULES(TOTEM_PLPARSER, [$pkg_modules])
AC_SUBST(TOTEM_PLPARSER_CFLAGS)
AC_SUBST(TOTEM_PLPARSER_LIBS)

PKG_CHECK_MODULES([TOTEM_PLPARSER_MINI], [gio-2.0])

GNOME_COMMON_INIT
GNOME_DEBUG_CHECK
GNOME_COMPILE_WARNINGS([maximum])
GNOME_CXX_WARNINGS
GNOME_MAINTAINER_MODE_DEFINES

if test "$GCC" = "yes" ; then
	CFLAGS="\
	-Wall \
	-Wchar-subscripts -Wmissing-declarations -Wmissing-prototypes \
	-Wnested-externs -Wpointer-arith \
	-Wcast-align -Wsign-compare \
	-fno-strict-aliasing \
	$CFLAGS"
fi

AC_SUBST([AM_CPPFLAGS])
AC_SUBST([AM_CFLAGS])
AC_SUBST([AM_CXXFLAGS])
AC_SUBST([AM_LDFLAGS])

GTK_DOC_CHECK(1.11)

AC_CONFIG_FILES([
Makefile
totem-plparser.pc
totem-plparser-uninstalled.pc
totem-plparser-mini.pc
totem-plparser-mini-uninstalled.pc
totem-pl-parser.spec
lib/Makefile
plparse/Makefile
plparse/tests/Makefile
plparse/totem-pl-parser-features.h
po/Makefile.in
docs/Makefile
docs/reference/Makefile
docs/reference/version.xml
])


AC_OUTPUT

echo "
$camel_message
"
